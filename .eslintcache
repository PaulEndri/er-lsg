[{"/home/paulendri/Projects/ui/src/index.tsx":"1","/home/paulendri/Projects/ui/src/reportWebVitals.ts":"2","/home/paulendri/Projects/ui/src/App.tsx":"3","/home/paulendri/Projects/ui/src/utilities/bgImages.ts":"4","/home/paulendri/Projects/ui/src/components/itemModal.component.tsx":"5","/home/paulendri/Projects/ui/src/components/layout/index.tsx":"6","/home/paulendri/Projects/ui/src/views/wiki/index.tsx":"7","/home/paulendri/Projects/ui/src/views/planner/index.tsx":"8","/home/paulendri/Projects/ui/src/views/planner/state/index.tsx":"9","/home/paulendri/Projects/ui/src/views/players/index.tsx":"10","/home/paulendri/Projects/ui/src/state/itemModal/index.tsx":"11","/home/paulendri/Projects/ui/src/utilities/types.tsx":"12","/home/paulendri/Projects/ui/src/components/itemCard.component.tsx":"13","/home/paulendri/Projects/ui/src/utilities/getImageSrc.ts":"14","/home/paulendri/Projects/ui/src/utilities/playerData.ts":"15","/home/paulendri/Projects/ui/src/utilities/rarityColor.ts":"16","/home/paulendri/Projects/ui/src/components/characterThumbnail.component.tsx":"17","/home/paulendri/Projects/ui/src/utilities/getList.tsx":"18","/home/paulendri/Projects/ui/src/components/characterPortrait.component.tsx":"19","/home/paulendri/Projects/ui/src/views/wiki/children/characterPage.component.tsx":"20","/home/paulendri/Projects/ui/src/views/wiki/children/weaponPage.component.tsx":"21","/home/paulendri/Projects/ui/src/views/wiki/children/armorPage.component.tsx":"22","/home/paulendri/Projects/ui/src/views/wiki/children/itemPage.component.tsx":"23","/home/paulendri/Projects/ui/src/views/wiki/children/locationPage.component.tsx":"24","/home/paulendri/Projects/ui/src/views/planner/children/loadOutItem.component.tsx":"25","/home/paulendri/Projects/ui/src/views/planner/children/routePane.component.tsx":"26","/home/paulendri/Projects/ui/src/views/planner/children/selectionPane.component.tsx":"27","/home/paulendri/Projects/ui/src/components/itemModalButton.component.tsx":"28","/home/paulendri/Projects/ui/src/components/map/index.tsx":"29","/home/paulendri/Projects/ui/src/components/page/index.tsx":"30","/home/paulendri/Projects/ui/src/utilities/reverseWeaponLookup.ts":"31","/home/paulendri/Projects/ui/src/components/section.component.tsx":"32","/home/paulendri/Projects/ui/src/components/attributeChart.component.tsx":"33","/home/paulendri/Projects/ui/src/views/wiki/children/characterStatTable.component.tsx":"34","/home/paulendri/Projects/ui/src/views/wiki/children/ItemSearch.component.tsx":"35","/home/paulendri/Projects/ui/src/components/sidebar/index.tsx":"36","/home/paulendri/Projects/ui/src/views/wiki/children/animalPage.component.tsx":"37","/home/paulendri/Projects/ui/src/views/home/index.tsx":"38","/home/paulendri/Projects/ui/src/components/rank.component.tsx":"39","/home/paulendri/Projects/ui/src/views/planner/children/routeList.component.tsx":"40","/home/paulendri/Projects/ui/src/views/planner/children/sidebarContents.component.tsx":"41","/home/paulendri/Projects/ui/src/views/planner/children/routeCraftingColumn.component.tsx":"42","/home/paulendri/Projects/ui/src/views/players/children/seasonModeRank.component.tsx":"43","/home/paulendri/Projects/ui/src/views/players/children/winRateChart.component.tsx":"44","/home/paulendri/Projects/ui/src/state/data/index.tsx":"45","/home/paulendri/Projects/ui/src/state/data/state.tsx":"46","/home/paulendri/Projects/ui/src/utilities/getPlayerData.ts":"47","/home/paulendri/Projects/ui/src/views/planner/children/routeCraftingPane.component.tsx":"48"},{"size":565,"mtime":1610148293181,"results":"49","hashOfConfig":"50"},{"size":425,"mtime":1609786284710,"results":"51","hashOfConfig":"50"},{"size":1901,"mtime":1610393014331,"results":"52","hashOfConfig":"50"},{"size":234,"mtime":1609786284710,"results":"53","hashOfConfig":"50"},{"size":2306,"mtime":1610327181041,"results":"54","hashOfConfig":"50"},{"size":1146,"mtime":1610148387301,"results":"55","hashOfConfig":"50"},{"size":9507,"mtime":1610284909451,"results":"56","hashOfConfig":"50"},{"size":4802,"mtime":1610393317561,"results":"57","hashOfConfig":"50"},{"size":1437,"mtime":1609830546173,"results":"58","hashOfConfig":"50"},{"size":6871,"mtime":1610403920601,"results":"59","hashOfConfig":"50"},{"size":1679,"mtime":1609826225193,"results":"60","hashOfConfig":"50"},{"size":129,"mtime":1609786284710,"results":"61","hashOfConfig":"50"},{"size":5301,"mtime":1610182533901,"results":"62","hashOfConfig":"50"},{"size":92,"mtime":1609786284710,"results":"63","hashOfConfig":"50"},{"size":2394,"mtime":1609786284710,"results":"64","hashOfConfig":"50"},{"size":748,"mtime":1609811354463,"results":"65","hashOfConfig":"50"},{"size":2119,"mtime":1609972010178,"results":"66","hashOfConfig":"50"},{"size":1266,"mtime":1610283654881,"results":"67","hashOfConfig":"50"},{"size":878,"mtime":1609985126400,"results":"68","hashOfConfig":"50"},{"size":15047,"mtime":1610284342941,"results":"69","hashOfConfig":"50"},{"size":6837,"mtime":1610284146151,"results":"70","hashOfConfig":"50"},{"size":1187,"mtime":1610284194421,"results":"71","hashOfConfig":"50"},{"size":1159,"mtime":1609978849231,"results":"72","hashOfConfig":"50"},{"size":6843,"mtime":1610283807081,"results":"73","hashOfConfig":"50"},{"size":1110,"mtime":1610229394001,"results":"74","hashOfConfig":"50"},{"size":5555,"mtime":1610393245091,"results":"75","hashOfConfig":"50"},{"size":3201,"mtime":1610393233731,"results":"76","hashOfConfig":"50"},{"size":1517,"mtime":1609972008538,"results":"77","hashOfConfig":"50"},{"size":1404,"mtime":1609816943363,"results":"78","hashOfConfig":"50"},{"size":1259,"mtime":1610282031671,"results":"79","hashOfConfig":"50"},{"size":326,"mtime":1609786284710,"results":"80","hashOfConfig":"50"},{"size":1341,"mtime":1609984361250,"results":"81","hashOfConfig":"50"},{"size":724,"mtime":1610006420530,"results":"82","hashOfConfig":"50"},{"size":1532,"mtime":1610004444800,"results":"83","hashOfConfig":"50"},{"size":3594,"mtime":1610284724011,"results":"84","hashOfConfig":"50"},{"size":976,"mtime":1610282854991,"results":"85","hashOfConfig":"50"},{"size":5917,"mtime":1610285836381,"results":"86","hashOfConfig":"50"},{"size":2154,"mtime":1609887241403,"results":"87","hashOfConfig":"50"},{"size":876,"mtime":1610006753650,"results":"88","hashOfConfig":"50"},{"size":3815,"mtime":1610242604401,"results":"89","hashOfConfig":"50"},{"size":1256,"mtime":1610283355961,"results":"90","hashOfConfig":"50"},{"size":2400,"mtime":1610393210281,"results":"91","hashOfConfig":"50"},{"size":8055,"mtime":1610325179091,"results":"92","hashOfConfig":"50"},{"size":770,"mtime":1610325166621,"results":"93","hashOfConfig":"50"},{"size":4569,"mtime":1610404159151,"results":"94","hashOfConfig":"50"},{"size":1235,"mtime":1610404164661,"results":"95","hashOfConfig":"50"},{"size":501,"mtime":1610403964861,"results":"96","hashOfConfig":"50"},{"size":4278,"mtime":1610393218811,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"15rwi8d",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"101"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"101"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"101"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"101"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"101"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"101"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"101"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/paulendri/Projects/ui/src/index.tsx",["207"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport { setStaticCache } from \"erbs-sdk\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["208","209"],"/home/paulendri/Projects/ui/src/reportWebVitals.ts",[],"/home/paulendri/Projects/ui/src/App.tsx",[],"/home/paulendri/Projects/ui/src/utilities/bgImages.ts",[],"/home/paulendri/Projects/ui/src/components/itemModal.component.tsx",["210"],"import { Categories, Item } from \"erbs-sdk\";\nimport React, { useContext } from \"react\";\nimport { Button, Icon, Modal, Segment } from \"semantic-ui-react\";\nimport { ItemModalContext } from \"../state/itemModal\";\nimport { LoadoutContext } from \"../state/loadout.tsx\";\nimport { Types } from \"../utilities/types\";\nimport { ItemCardComponent } from \"./itemCard.component\";\n\nexport const ItemModalComponent = () => {\n  const { item, setItem, itemHistory, addingToLoadout } = useContext(ItemModalContext);\n  const { updateLoadout } = useContext(LoadoutContext);\n  const itemData = item ? (item instanceof Item ? item : new Item(item)) : null;\n  const addableItem =\n    itemData && [Categories.Armor, Categories.Weapon].includes(itemData.category as any);\n\n  return (\n    <Modal basic onClose={() => setItem(null)} open={item} size=\"small\">\n      <Modal.Content style={{ width: \"100%\", paddingBottom: 0 }}>\n        <div\n          style={{\n            maxWidth: \"450px\",\n            backgroundColor: \"rgba(66, 64, 74, 1)\",\n            textAlign: \"center\",\n            margin: \"auto\",\n          }}\n        >\n          <ItemCardComponent item={item} />\n        </div>\n      </Modal.Content>\n      <Modal.Actions style={{ paddingTop: 0 }}>\n        <div style={{ maxWidth: \"450px\", margin: \"auto\" }}>\n          <Segment\n            color=\"black\"\n            inverted\n            style={{ borderRadius: 0, marginTop: 0, paddingLeft: 0, paddingRight: 0 }}\n          >\n            {itemHistory && itemHistory.length > 0 && (\n              <Button\n                color=\"yellow\"\n                onClick={() => setItem(itemHistory[itemHistory.length - 1].name)}\n              >\n                <Icon name=\"backward\" />\n                Back\n              </Button>\n            )}\n            {addingToLoadout && addableItem && (\n              <Button\n                onClick={() => {\n                  setItem(null, false);\n                  updateLoadout(itemData.clientType, itemData);\n                }}\n                content={`Add to Loadout`}\n                color=\"green\"\n              />\n            )}\n            <Button color=\"red\" onClick={() => setItem(null, false)}>\n              <Icon name=\"close\" />\n              Close\n            </Button>\n          </Segment>\n        </div>\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","/home/paulendri/Projects/ui/src/components/layout/index.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/index.tsx",["211","212","213"],"import { Armors, Character, Locations, Weapons, WeaponsLookup } from \"erbs-sdk\";\nimport React, { useState } from \"react\";\nimport { Menu, Grid, List, Label, Header, Image, Button } from \"semantic-ui-react\";\nimport { Link, Route, Switch, useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\nimport { PageComponent } from \"../../components/page\";\nimport { CharacterLandingPage, CharacterPage } from \"./children/characterPage.component\";\nimport { WeaponPage } from \"./children/weaponPage.component\";\nimport { ArmorPage } from \"./children/armorPage.component\";\nimport { ItemPage } from \"./children/itemPage.component\";\nimport { LocationLandingPage, LocationPage } from \"./children/locationPage.component\";\nimport CharacterThumbnailComponent from \"../../components/characterThumbnail.component\";\nimport { getImageSrc } from \"../../utilities/getImageSrc\";\nimport { BG_THIRD } from \"../../utilities/bgImages\";\nimport { MapComponent } from \"../../components/map\";\nimport { AnimalLandingPage, AnimalPage } from \"./children/animalPage.component\";\nimport { MiscListKeys } from \"../../utilities/getList\";\n\nconst menuItems = [\n  [\"characters\", \"Characters\", Object.keys(Character.SOURCES)],\n  [\"weapons\", \"Weapons\", Object.keys(Weapons)],\n  [\"armors\", \"Armors\", Object.keys(Armors)],\n  [\"locations\", \"Locations\", Object.keys(Locations).filter((type) => !isNaN(Locations[type]))],\n  [\"items\", \"Items\", MiscListKeys],\n  [\"animals\", \"Animals\"],\n];\n\nexport const initialLoadout = {\n  Weapon: null,\n  Chest: null,\n  Head: null,\n  Arm: null,\n  Leg: null,\n  Accessory: null,\n};\n\nconst HpHeader = ({ content, path }) => {\n  const [hovering, setHovering] = useState(false);\n  const history = useHistory();\n\n  const color = hovering ? \"rgba(251, 189, 8, 1)\" : \"rgba(200, 200, 200, 0.2)\";\n  const background = hovering\n    ? \"linear-gradient(360deg,rgba(252,205,51,.5214460784313726) 0%,rgba(51,51,51,.1825105042016807) 22%)\"\n    : null;\n  return (\n    <div\n      onMouseEnter={() => setHovering(true)}\n      onMouseLeave={() => setHovering(false)}\n      onClick={() => history.push(`/wiki/${path}`)}\n      style={{\n        paddingTop: \"1rem\",\n        background,\n        paddingLeft: \"20px\",\n        paddingBottom: \"5px\",\n        marginBottom: \"1rem\",\n        width: \"100%\",\n        borderBottom: `2px inset ${color}`,\n      }}\n    >\n      <Header size=\"large\" inverted>\n        {content}\n      </Header>\n    </div>\n  );\n};\nconst WikiView = () => {\n  const location = useLocation();\n  const { path, url } = useRouteMatch();\n  const history = useHistory();\n\n  const sidebarItems = menuItems.map(([route, name, subMenuItems]: [string, string, string[]]) => {\n    const isActive = location.pathname.includes(route);\n    const path = `/wiki/${route}`;\n    const isRoot = location.pathname === path;\n    const showSubMenu = isActive && !isRoot && subMenuItems && subMenuItems.length > 0;\n\n    return (\n      <Menu.Item key={route} active={isActive} as={Link} to={path} className=\"fancy-hover\">\n        {name}\n        {showSubMenu && (\n          <Menu.Menu>\n            {subMenuItems.map((subRoute) => (\n              <Menu.Item\n                name={subRoute}\n                key={subRoute + route}\n                as={Link}\n                to={`${path}/${subRoute}`}\n              />\n            ))}\n          </Menu.Menu>\n        )}\n      </Menu.Item>\n    );\n  });\n  return (\n    <PageComponent\n      sidebarTitle=\"Information\"\n      sidebarItems={sidebarItems}\n      title=\"Lumia Island Information Center\"\n    >\n      <Switch>\n        <Route path={`${path}/characters/:id`}>\n          <CharacterPage />\n        </Route>\n        <Route exact path={`${path}/characters`}>\n          <CharacterLandingPage />\n        </Route>\n        <Route exact path={`${path}/weapons`}>\n          <WeaponPage />\n        </Route>\n        <Route path={`${path}/weapons/:id`}>\n          <WeaponPage />\n        </Route>\n        <Route exact path={`${path}/armors`}>\n          <ArmorPage />\n        </Route>\n        <Route path={`${path}/armors/:id`}>\n          <ArmorPage />\n        </Route>\n        <Route exact path={`${path}/items`}>\n          <ItemPage />\n        </Route>\n        <Route path={`${path}/items/:id`}>\n          <ItemPage />\n        </Route>\n        <Route exact path={`${path}/locations`}>\n          <LocationLandingPage />\n        </Route>\n        <Route path={`${path}/locations/:id`}>\n          <LocationPage />\n        </Route>\n        <Route exact path={`${path}/animals`}>\n          <AnimalLandingPage />\n        </Route>\n        <Route path={`${path}/animals/:id`}>\n          <AnimalPage />\n        </Route>\n        <Route path=\"\" exact>\n          <Grid\n            centered\n            style={{\n              backgroundColor: \"rgba(50, 50, 50, 0.9)\",\n              backgroundImage: BG_THIRD,\n              backgroundPosition: \"5px 25px\",\n            }}\n          >\n            <Grid.Row textAlign=\"center\" centered>\n              <Grid.Column width={3}>\n                <Image size=\"medium\" src={getImageSrc(\"logo\")} centered />\n              </Grid.Column>\n              <Grid.Column width={3} verticalAlign=\"middle\">\n                <Header size=\"huge\" inverted>\n                  Survival Guide\n                </Header>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row style={{ margin: 0, padding: 0 }}></Grid.Row>\n            <Grid.Row style={{ marginTop: \"2rem\" }}>\n              <Grid.Column width={4}>\n                <div>\n                  <HpHeader content={\"Test Subjects\"} path={\"characters\"} />\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"row\",\n                      flexWrap: \"wrap\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {(menuItems[0][2] as string[]).map((char) => (\n                      <CharacterThumbnailComponent\n                        key={char}\n                        isActive={false}\n                        onClick={() => history.push(`/wiki/characters/${char}`)}\n                        name={char}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </Grid.Column>\n              <Grid.Column width={8} style={{ paddingLeft: \"0\" }}>\n                <Grid style={{ borderLeft: \"3px groove rgba(200, 200 , 200, 0.2)\" }}>\n                  <Grid.Row basic fluid>\n                    <HpHeader content=\"Weapon Types\" path={\"weapons\"} />\n                  </Grid.Row>\n                  <Grid.Row>\n                    <div style={{ paddingLeft: \"1rem\" }}>\n                      {Object.values(Weapons).map((wpn) => (\n                        <Button\n                          key={wpn}\n                          color=\"grey\"\n                          style={{\n                            borderRadius: 0,\n                            marginRight: 0,\n                            marginLeft: 0,\n                            border: \"1px solid rgba(255, 255, 255, 0.1)\",\n                          }}\n                          compact\n                          onClick={() => history.push(`/wiki/weapons/${wpn}`)}\n                        >\n                          <Image\n                            wrapped\n                            size=\"small\"\n                            style={{\n                              maxHeight: \"auto\",\n                              width: \"50px\",\n                            }}\n                            src={getImageSrc(`Weapon${wpn}`)}\n                          />\n                        </Button>\n                      ))}\n                    </div>\n                  </Grid.Row>\n                  <Grid.Row basic>\n                    <HpHeader content=\"Armors & Items\" path={\"items\"} />\n                  </Grid.Row>\n                  <Grid.Row>\n                    <div style={{ paddingLeft: \"1rem\" }}>\n                      {(menuItems[2][2] as string[]).map((char) => (\n                        <Label\n                          size=\"large\"\n                          color=\"orange\"\n                          style={{ margin: 4 }}\n                          key={char}\n                          icon=\"user\"\n                          as={Link}\n                          to={`/wiki/armors/${char}`}\n                        >\n                          {char}\n                        </Label>\n                      ))}\n                      {(menuItems[4][2] as string[]).map((char) => (\n                        <Label\n                          size=\"large\"\n                          color=\"orange\"\n                          style={{ margin: 4 }}\n                          key={char}\n                          icon=\"user\"\n                          as={Link}\n                          to={`/wiki/items/${char}`}\n                        >\n                          {char}\n                        </Label>\n                      ))}\n                    </div>\n                  </Grid.Row>\n                </Grid>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row basic style={{ borderRadius: 0 }}>\n              <HpHeader content=\"Lumia Island\" path={\"locations\"} />\n              <div style={{ paddingLeft: \"1rem\", display: \"flex\", flexFlow: \"row wrap\" }}>\n                <MapComponent onClick={(e) => history.push(`/wiki/locations/${e}`)} />\n              </div>\n            </Grid.Row>\n          </Grid>\n        </Route>\n      </Switch>\n    </PageComponent>\n  );\n};\n\nexport default WikiView;\n","/home/paulendri/Projects/ui/src/views/planner/index.tsx",["214","215","216"],"/home/paulendri/Projects/ui/src/views/planner/state/index.tsx",[],"/home/paulendri/Projects/ui/src/views/players/index.tsx",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"/home/paulendri/Projects/ui/src/state/itemModal/index.tsx",[],"/home/paulendri/Projects/ui/src/utilities/types.tsx",[],"/home/paulendri/Projects/ui/src/components/itemCard.component.tsx",["232"],"import React, { FunctionComponent, useContext } from \"react\";\nimport { Button, Header, Image, Label, List, Segment } from \"semantic-ui-react\";\nimport { Item } from \"erbs-sdk\";\nimport { getImageSrc } from \"../utilities/getImageSrc\";\nimport { itemRarityBackground, rarityColor } from \"../utilities/rarityColor\";\nimport { ItemModalButton } from \"./itemModalButton.component\";\nimport { ItemModalContext } from \"../state/itemModal\";\n\ntype ItemCardProps = {\n  item?: Item<string>;\n  showReqs?: boolean;\n  adding?: boolean;\n};\n\nexport const ItemCardComponent: FunctionComponent<ItemCardProps> = ({ item, showReqs }) => {\n  const { setItem } = useContext(ItemModalContext);\n  return (\n    <Segment.Group\n      style={{\n        borderRadius: 0,\n        backgroundColor: \"rgba(66, 64, 74, 0.2)\",\n      }}\n    >\n      {item && (\n        <React.Fragment>\n          <Segment basic compact textAlign=\"center\">\n            <Button\n              color={rarityColor(item.rarity)}\n              as=\"a\"\n              href={`https://eternalreturn.gamepedia.com/${item.name}`}\n              content={item.displayName}\n              style={{ marginBottom: \"1.5rem\", marginTop: \"1rem\" }}\n              label={item.clientType}\n            />\n            <Segment\n              basic\n              inverted\n              raised\n              style={{\n                // backgroundColor: '#877e8a',\n                margin: \"auto\",\n                marginBottom: \"10px\",\n                padding: \"1px\",\n                border: \"2px inset rgba(255, 190, 16, 0.45)\",\n                maxWidth: \"275px\",\n                overflow: \"hidden\",\n                background: itemRarityBackground(item.rarity),\n              }}\n            >\n              <Image floated=\"right\" src={getImageSrc(item.displayName)} fluid bordered />\n            </Segment>\n\n            <div style={{ color: \"white\", fontStyle: \"italic\" }}>{item.description}</div>\n          </Segment>\n          {item.stats && (\n            <Segment inverted raised style={{ backgroundColor: \"transparent\" }}>\n              <Header>Stats</Header>\n              <List\n                items={Object.entries(item.stats).map(\n                  ([[first, ...key], val]: any) =>\n                    `${first.toUpperCase()}${key\n                      .join(\"\")\n                      .replace(/([A-Z])/g, \" $1\")\n                      .trim()}: ${val}`\n                )}\n              />\n            </Segment>\n          )}\n          {item.buildsFrom && item.buildsFrom.length > 0 && (\n            <Segment inverted style={{ backgroundColor: \"transparent\" }}>\n              <Header>Built From</Header>\n              {item.buildsFrom.map(({ name, id }, idx) => (\n                <ItemModalButton key={`${name}${id}`} id={id} />\n              ))}\n            </Segment>\n          )}\n          {item.buildsInto && Object.entries(item.buildsInto).length > 0 && (\n            <Segment inverted style={{ backgroundColor: \"transparent\" }}>\n              <Header>Builds Into</Header>\n              {item.buildsInto.map((item, idx) => (\n                <ItemModalButton key={item.id} id={item.id} />\n              ))}\n            </Segment>\n          )}\n          {item.locations && Object.keys(item.locations).length > 0 && (\n            <Segment inverted style={{ backgroundColor: \"transparent\" }}>\n              <Header inverted>Found In</Header>\n              {Object.entries(item.locations).map(([location, value]) => (\n                <Label key={location} detail={value} content={location} color=\"yellow\" />\n              ))}\n            </Segment>\n          )}\n          {item.droppedFrom && item.droppedFrom.length > 0 && (\n            <Segment inverted style={{ backgroundColor: \"transparent\" }}>\n              <Header inverted>Dropped From</Header>\n              {item.droppedFrom.map(({ name }) => (\n                <Label key={name} content={name} color=\"red\" />\n              ))}\n            </Segment>\n          )}\n\n          {item.materials && showReqs && Object.entries(item.materials).length > 0 && (\n            <Segment inverted style={{ backgroundColor: \"rgba(0, 0, 0, 0.05)\" }} basic>\n              <Label style={{ width: \"100%\", textAlign: \"center\" }} color=\"red\">\n                Total Material Requirements\n              </Label>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {Object.entries(item.materials).map(([material, quantity], key) => (\n                  <div style={{ margin: \"5px\" }}>\n                    <Label image key={key + material} onClick={() => setItem(material)}>\n                      <img src={getImageSrc(material)} />\n                      {quantity}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            </Segment>\n          )}\n        </React.Fragment>\n      )}\n      {!item && (\n        <Segment\n          attached=\"top\"\n          basic\n          textAlign=\"center\"\n          placeholder\n          inverted\n          style={{ borderRadius: 0, border: 0 }}\n        >\n          No Item Selected\n        </Segment>\n      )}\n    </Segment.Group>\n  );\n};\n","/home/paulendri/Projects/ui/src/utilities/getImageSrc.ts",[],"/home/paulendri/Projects/ui/src/utilities/playerData.ts",[],"/home/paulendri/Projects/ui/src/utilities/rarityColor.ts",[],"/home/paulendri/Projects/ui/src/components/characterThumbnail.component.tsx",["233"],"import { FunctionComponent, useState } from \"react\";\nimport { getImageSrc } from \"../utilities/getImageSrc\";\n\ninterface CharacterThumbnailProps {\n  name: string;\n  isActive: boolean;\n  onClick?: Function;\n  width?: number;\n}\n\nconst CharacterThumbnailComponent: FunctionComponent<CharacterThumbnailProps> = ({\n  name,\n  onClick,\n  isActive,\n  width = 70,\n}) => {\n  const [hovering, setHovering] = useState(false);\n  const parentStyle = {\n    height: `${width + 10}px`,\n    width: `${width + 10}px`,\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(200, 200, 200, 0.15)\",\n    // margin: '3px',\n    border: \"1px solid rgba(255, 255, 255, 0.1)\",\n  };\n\n  const containerStyle = {\n    overflow: \"hidden\",\n    transform: \"skew(45deg) scale(1.2)\",\n    backgroundColor: \"rgba(255, 255, 255, 0.15)\",\n    border: \"1px solid \",\n    borderColor: \"rgba(200, 200, 200, 0.5)\",\n    width: `${width + 20}px`,\n    height: `${width + 20}px`,\n  };\n\n  if ((hovering || isActive) && onClick) {\n    Object.assign(containerStyle, {\n      backgroundColor: \"rgba(200, 200, 200, 1)\",\n      transform: \"skew(45deg) scale(1.2)\",\n      borderColor: \"white\",\n    });\n\n    Object.assign(parentStyle, {\n      backgroundColor: \"rgba(255, 190, 16, 0.9)\",\n    });\n  }\n\n  return (\n    <div\n      style={{\n        // padding: 0,\n        // margin: 2,\n        backgroundColor: \"rgba(255, 255, 255, 0.01)\",\n        border: \"1px solid rgba(255, 255, 255, 0.02)\",\n      }}\n    >\n      <div\n        onMouseEnter={() => setHovering(true)}\n        onMouseLeave={() => setHovering(false)}\n        onClick={(e) => (onClick ? onClick(e) : null)}\n        style={parentStyle}\n        className=\"test\"\n      >\n        <div style={containerStyle}>\n          <img\n            style={{\n              height: \"auto\",\n              width: `${width}px`,\n              margin: \"auto\",\n              marginTop: \"-5px\",\n              transform: \"skew(-45deg)\",\n            }}\n            src={getImageSrc(`characters/mini/${name}`)}\n            className=\"ui medium image\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CharacterThumbnailComponent;\n","/home/paulendri/Projects/ui/src/utilities/getList.tsx",[],"/home/paulendri/Projects/ui/src/components/characterPortrait.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/characterPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/weaponPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/armorPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/itemPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/locationPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/planner/children/loadOutItem.component.tsx",[],"/home/paulendri/Projects/ui/src/views/planner/children/routePane.component.tsx",["234","235"],"/home/paulendri/Projects/ui/src/views/planner/children/selectionPane.component.tsx",[],"/home/paulendri/Projects/ui/src/components/itemModalButton.component.tsx",["236","237","238"],"import React, { useContext } from \"react\";\nimport { Button, Image, Label, Segment } from \"semantic-ui-react\";\nimport { Item } from \"erbs-sdk\";\nimport { getImageSrc } from \"../utilities/getImageSrc\";\nimport { itemRarityBackground, rarityColor } from \"../utilities/rarityColor\";\nimport { ItemModalContext } from \"../state/itemModal\";\nimport { useLocation } from \"react-router-dom\";\ntype ItemModalButtonProps = {\n  id: any;\n  label?: any;\n  action?: any;\n  item?: any;\n};\n\nconst InnerButton = React.memo<ItemModalButtonProps>(({ item, action, label }) => (\n  <Button\n    compact\n    label={label}\n    content={<Image centered rounded size=\"tiny\" src={getImageSrc(item.displayName)} />}\n    onClick={action}\n    style={{\n      borderRadius: 0,\n      marginBottom: \"5px\",\n      maxWidth: label ? \"150px\" : \"100px\",\n      padding: 0,\n      border: \"2px outset rgba(255, 255, 255, 0.2)\",\n      background: itemRarityBackground(item.rarity),\n    }}\n  />\n));\n\nexport const ItemModalButton: React.FC<ItemModalButtonProps> = ({ id, label, action }) => {\n  const { setItem } = useContext(ItemModalContext);\n  const location = useLocation();\n\n  let item;\n  try {\n    item = id instanceof Item ? id : new Item(id);\n  } catch (e) {\n    return <div>Error {id} does not exist</div>;\n  }\n\n  const innerAction = () =>\n    action\n      ? action(item, location.pathname.includes(\"planner\"))\n      : setItem(item, location.pathname.includes(\"planner\"));\n\n  return <InnerButton id={id} item={item} label={label} action={innerAction} />;\n};\n","/home/paulendri/Projects/ui/src/components/map/index.tsx",["239","240","241"],"import React, { DOMElement, useCallback, useEffect, useRef, useState } from \"react\";\nimport { ReactComponent as Map } from \"./LumiaIslandMap.svg\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Loader } from \"semantic-ui-react\";\nimport { Locations } from \"erbs-sdk\";\n\ntype Props = {\n  onClick?: any;\n  selected?: Locations[];\n};\n\nexport const MapComponent: React.FC<Props> = ({ onClick, selected }) => {\n  const [id, setId] = useState(null);\n  const el = useCallback((node) => {\n    if (node) {\n      const links = node.getElementsByTagName(\"a\");\n\n      for (let i = 0; i < links.length; i++) {\n        const link = links[i];\n        const location = link.getAttribute(\"data-location\");\n\n        if (\n          selected &&\n          link.className &&\n          link.className.baseVal &&\n          selected.length &&\n          selected.some((sel) => link.className.baseVal.indexOf(sel) >= 0)\n        ) {\n          link.classList.add(\"selected\");\n        } else {\n          link.classList.remove(\"selected\");\n        }\n\n        if (onClick && location) {\n          link.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n\n            onClick(location);\n          });\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!id) {\n      setId(uuidv4());\n    }\n  }, [id]);\n\n  if (!id) {\n    return <Loader />;\n  }\n\n  return (\n    <div id={id} ref={el}>\n      <Map />\n    </div>\n  );\n};\n","/home/paulendri/Projects/ui/src/components/page/index.tsx",["242"],"import React, { StatelessComponent, ReactNode } from \"react\";\nimport { Segment, Header } from \"semantic-ui-react\";\nimport { BG_THIRD } from \"../../utilities/bgImages\";\nimport { SidebarComponent } from \"../sidebar\";\n\ninterface PageProps {\n  sidebarItems?: ReactNode;\n  title: ReactNode;\n  sidebarTitle?: ReactNode;\n}\n\nexport const PageComponent: StatelessComponent<PageProps> = ({\n  sidebarItems,\n  title,\n  sidebarTitle,\n  children,\n}) => {\n  return (\n    <Segment basic style={{ padding: 0 }}>\n      {sidebarTitle && <SidebarComponent title={sidebarTitle}>{sidebarItems}</SidebarComponent>}\n      <div style={{ overflow: \"auto\" }}>\n        <Segment\n          inverted\n          raised\n          color=\"red\"\n          textAlign=\"center\"\n          secondary\n          padded={false}\n          basic\n          style={{ marginBottom: 0, padding: 0 }}\n        >\n          <Header as=\"h2\" style={{ padding: \"10px\" }}>\n            {title}\n          </Header>\n        </Segment>\n        <div\n          style={{\n            display: \"flow-root\",\n            overflow: \"auto\",\n            overflowX: \"hidden\",\n            maxHeight: \"95vh\",\n\n            minHeight: \"85vh\",\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    </Segment>\n  );\n};\n","/home/paulendri/Projects/ui/src/utilities/reverseWeaponLookup.ts",[],"/home/paulendri/Projects/ui/src/components/section.component.tsx",["243"],"import React, { useState } from \"react\";\nimport { Header, Icon, Segment } from \"semantic-ui-react\";\n\ntype Props = {\n  title: string;\n  toggleCollapse?: any;\n  collapsed?: any;\n};\nexport const SectionComponent: React.FC<Props> = ({\n  title,\n  collapsed,\n  toggleCollapse,\n  children,\n}) => {\n  const [localCollapsed, setCollapsed] = useState(false);\n\n  const showContent = toggleCollapse ? collapsed : localCollapsed;\n  const clickHandler = toggleCollapse ? toggleCollapse : setCollapsed;\n  return (\n    <>\n      <Segment\n        className=\"fancy-hover\"\n        color=\"black\"\n        basic\n        onClick={() => clickHandler(!showContent)}\n        inverted\n        style={{\n          borderRadius: 0,\n          marginBottom: 0,\n          border: 0,\n          cursor: \"pointer\",\n          borderTop: \"3px groove rgba(255, 250, 250, 0.2)\",\n        }}\n      >\n        <Icon name={showContent ? \"plus square outline\" : \"minus square outline\"} />\n        <h3 className=\"header inverted\" style={{ display: \"inline\", paddingLeft: \"8px\" }}>\n          {title}\n        </h3>\n      </Segment>\n      <div\n        style={{\n          backgroundColor: \"rgba(70, 66, 66, 0.6)\",\n          paddingTop: \"1rem\",\n          textAlign: \"center\",\n          display: showContent ? \"block\" : \"none\",\n        }}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\n","/home/paulendri/Projects/ui/src/components/attributeChart.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/characterStatTable.component.tsx",[],"/home/paulendri/Projects/ui/src/views/wiki/children/ItemSearch.component.tsx",[],"/home/paulendri/Projects/ui/src/components/sidebar/index.tsx",["244","245"],"import React, { ReactNode, StatelessComponent } from \"react\";\nimport { Segment, Menu, Header } from \"semantic-ui-react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\ninterface SidebarProps {\n  title: ReactNode;\n}\nexport const SidebarComponent: StatelessComponent<SidebarProps> = ({ title, children }) => {\n  return (\n    <Segment\n      basic\n      compact\n      inverted\n      floated=\"left\"\n      textAlign=\"left\"\n      color=\"black\"\n      style={{\n        border: 0,\n        borderRadius: 0,\n        marginTop: 0,\n        minHeight: \"95vh\",\n        padding: 0,\n        marginRight: 0,\n        width: \"150px\",\n        height: \"max-content\",\n      }}\n    >\n      <Menu inverted vertical style={{ border: 0, borderRadius: 0 }} fluid color=\"black\">\n        <Menu.Header style={{ padding: \"10px\" }}>\n          <Header as=\"h2\" color=\"black\" inverted>\n            {title}\n          </Header>\n        </Menu.Header>\n        {children}\n      </Menu>\n    </Segment>\n  );\n};\n","/home/paulendri/Projects/ui/src/views/wiki/children/animalPage.component.tsx",[],"/home/paulendri/Projects/ui/src/views/home/index.tsx",["246"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { PageComponent } from \"../../components/page\";\n\nconst HomeView = () => {\n  return (\n    <PageComponent title=\"Eternal Return Lumia Survival Guide\">\n      <Container fluid textAlign=\"center\">\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            paddingTop: \"10%\",\n          }}\n        >\n          <Header\n            as={Link}\n            to=\"/wiki\"\n            size=\"large\"\n            inverted\n            className=\"fancy-hover\"\n            style={{\n              marginBottom: 0,\n              height: \"100%\",\n              backgroundColor: \"rgba(51, 51, 51, 0.7)\",\n              padding: \"8% 5% 8% 5%\",\n              border: \"2px inset rgba(255, 255, 255, 0.1)\",\n              borderRight: \"3px groove rgba(200, 200, 200, 0.4)\",\n              textShadow: \"0px 1px 4px rgba(255, 255, 255, 0.9)\",\n              background: \"radial-gradient(rgba(51, 51,51,1), rgba(11, 11, 11, 0.5))\",\n            }}\n          >\n            <span style={{ paddingLeft: \"-2rem\" }}>Information</span>\n            <br />\n            <span style={{ paddingLeft: \"3rem\" }}>Center</span>\n          </Header>\n          <Header\n            as={Link}\n            to=\"/planner\"\n            size=\"large\"\n            inverted\n            className=\"fancy-hover\"\n            style={{\n              height: \"100%\",\n              backgroundColor: \"rgba(51, 51, 51, 0.7)\",\n              padding: \"8% 5% 8% 5%\",\n              border: \"2px inset rgba(255, 255, 255, 0.1)\",\n              borderLeft: \"3px groove rgba(200, 200, 200, 0.4)\",\n              textShadow: \"0px 1px 4px rgba(255, 255, 255, 0.9)\",\n              background: \"radial-gradient(rgba(51, 51,51,1), rgba(11, 11, 11, 0.5))\",\n            }}\n          >\n            <span style={{ paddingRight: \"2rem\" }}>Surival</span>\n            <br />\n            <span style={{}}>Planner</span>\n          </Header>\n        </div>\n      </Container>\n    </PageComponent>\n  );\n};\n\nexport default HomeView;\n","/home/paulendri/Projects/ui/src/components/rank.component.tsx",[],"/home/paulendri/Projects/ui/src/views/planner/children/routeList.component.tsx",[],"/home/paulendri/Projects/ui/src/views/planner/children/sidebarContents.component.tsx",[],"/home/paulendri/Projects/ui/src/views/planner/children/routeCraftingColumn.component.tsx",["247"],"import React from \"react\";\nimport { Grid, Header, Button, Label, Image, Segment } from \"semantic-ui-react\";\nimport { getImageSrc } from \"../../../utilities/getImageSrc\";\nimport { ItemModalButton } from \"../../../components/itemModalButton.component\";\nimport { Item, Location } from \"erbs-sdk\";\n\ntype RouteCraftingComponentProps = {\n  location: Location;\n  completed: Item[];\n  craftable: Item[];\n  setItem: (val) => null;\n};\n\nexport const RouteCraftingColumnComponent: React.FC<RouteCraftingComponentProps> = ({\n  location,\n  completed,\n  craftable,\n  setItem,\n}) => {\n  return (\n    <Grid.Column width={3}>\n      <Segment\n        style={{ padding: 0, borderRadius: 0, backgroundColor: \"rgba(29, 25, 25, 0.65)\" }}\n        textAlign=\"center\"\n        inverted\n        raised\n      >\n        <div style={{ position: \"relative\" }}>\n          <Image\n            src={`${process.env.PUBLIC_URL}/assets/images/locations/${location.name}.jpg`}\n            width={\"100%\"}\n          />\n          <Segment\n            inverted\n            style={{\n              borderRadius: 0,\n              margin: 0,\n              position: \"absolute\",\n              top: 0,\n              width: \"100%\",\n              background: `linear-gradient(180deg,rgba(255, 50, 50, 1) 0%, rgba(255, 50, 50, 0.4) 40%,rgba(255, 150, 100, 0) 90%)`,\n            }}\n          >\n            <Header inverted>{location.name}</Header>\n          </Segment>\n        </div>\n\n        {completed && completed.length > 0 && (\n          <>\n            <Header inverted style={{ margin: \"1rem\" }}>\n              Loadout Items Completed\n            </Header>\n            {completed.map((item) => (\n              <ItemModalButton id={item.id} item={item} key={item.id} />\n            ))}\n          </>\n        )}\n\n        <Header inverted style={{ margin: \"1rem\" }}>\n          Items Craftable\n        </Header>\n        <div style={{ display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"center\" }}>\n          <div style={{ display: \"block\" }}></div>\n          {craftable.map((item) => (\n            <div key={item.id} style={{ margin: \"5px\" }}>\n              <Label style={{ padding: 0 }} color=\"teal\" as={Button} onClick={() => setItem(item)}>\n                <img src={getImageSrc(item.displayName)} />\n              </Label>\n            </div>\n          ))}\n        </div>\n      </Segment>\n    </Grid.Column>\n  );\n};\n","/home/paulendri/Projects/ui/src/views/players/children/seasonModeRank.component.tsx",[],"/home/paulendri/Projects/ui/src/views/players/children/winRateChart.component.tsx",[],"/home/paulendri/Projects/ui/src/state/data/index.tsx",[],"/home/paulendri/Projects/ui/src/state/data/state.tsx",[],"/home/paulendri/Projects/ui/src/utilities/getPlayerData.ts",[],"/home/paulendri/Projects/ui/src/views/planner/children/routeCraftingPane.component.tsx",[],{"ruleId":"248","severity":1,"message":"249","line":7,"column":10,"nodeType":"250","messageId":"251","endLine":7,"endColumn":24},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"248","severity":1,"message":"256","line":6,"column":10,"nodeType":"250","messageId":"251","endLine":6,"endColumn":15},{"ruleId":"248","severity":1,"message":"257","line":1,"column":49,"nodeType":"250","messageId":"251","endLine":1,"endColumn":62},{"ruleId":"248","severity":1,"message":"258","line":3,"column":22,"nodeType":"250","messageId":"251","endLine":3,"endColumn":26},{"ruleId":"248","severity":1,"message":"259","line":67,"column":17,"nodeType":"250","messageId":"251","endLine":67,"endColumn":20},{"ruleId":"248","severity":1,"message":"260","line":36,"column":31,"nodeType":"250","messageId":"251","endLine":36,"endColumn":46},{"ruleId":"248","severity":1,"message":"261","line":38,"column":23,"nodeType":"250","messageId":"251","endLine":38,"endColumn":35},{"ruleId":"248","severity":1,"message":"262","line":38,"column":37,"nodeType":"250","messageId":"251","endLine":38,"endColumn":43},{"ruleId":"248","severity":1,"message":"263","line":2,"column":29,"nodeType":"250","messageId":"251","endLine":2,"endColumn":38},{"ruleId":"248","severity":1,"message":"264","line":9,"column":3,"nodeType":"250","messageId":"251","endLine":9,"endColumn":7},{"ruleId":"248","severity":1,"message":"265","line":11,"column":3,"nodeType":"250","messageId":"251","endLine":11,"endColumn":9},{"ruleId":"248","severity":1,"message":"266","line":12,"column":3,"nodeType":"250","messageId":"251","endLine":12,"endColumn":9},{"ruleId":"248","severity":1,"message":"267","line":14,"column":10,"nodeType":"250","messageId":"251","endLine":14,"endColumn":21},{"ruleId":"248","severity":1,"message":"268","line":14,"column":34,"nodeType":"250","messageId":"251","endLine":14,"endColumn":47},{"ruleId":"248","severity":1,"message":"269","line":27,"column":11,"nodeType":"250","messageId":"251","endLine":27,"endColumn":13},{"ruleId":"248","severity":1,"message":"270","line":28,"column":10,"nodeType":"250","messageId":"251","endLine":28,"endColumn":22},{"ruleId":"248","severity":1,"message":"271","line":28,"column":24,"nodeType":"250","messageId":"251","endLine":28,"endColumn":39},{"ruleId":"248","severity":1,"message":"272","line":30,"column":11,"nodeType":"250","messageId":"251","endLine":30,"endColumn":24},{"ruleId":"248","severity":1,"message":"273","line":31,"column":10,"nodeType":"250","messageId":"251","endLine":31,"endColumn":17},{"ruleId":"248","severity":1,"message":"274","line":31,"column":19,"nodeType":"250","messageId":"251","endLine":31,"endColumn":29},{"ruleId":"248","severity":1,"message":"275","line":32,"column":10,"nodeType":"250","messageId":"251","endLine":32,"endColumn":15},{"ruleId":"248","severity":1,"message":"276","line":32,"column":17,"nodeType":"250","messageId":"251","endLine":32,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":103,"column":32,"nodeType":"279","messageId":"280","endLine":103,"endColumn":34},{"ruleId":"281","severity":1,"message":"282","line":119,"column":23,"nodeType":"283","endLine":119,"endColumn":58},{"ruleId":"281","severity":1,"message":"282","line":66,"column":11,"nodeType":"283","endLine":76,"endColumn":13},{"ruleId":"248","severity":1,"message":"284","line":2,"column":48,"nodeType":"250","messageId":"251","endLine":2,"endColumn":52},{"ruleId":"281","severity":1,"message":"282","line":96,"column":25,"nodeType":"283","endLine":96,"endColumn":101},{"ruleId":"248","severity":1,"message":"285","line":2,"column":25,"nodeType":"250","messageId":"251","endLine":2,"endColumn":30},{"ruleId":"248","severity":1,"message":"286","line":2,"column":32,"nodeType":"250","messageId":"251","endLine":2,"endColumn":39},{"ruleId":"248","severity":1,"message":"287","line":5,"column":32,"nodeType":"250","messageId":"251","endLine":5,"endColumn":43},{"ruleId":"248","severity":1,"message":"288","line":1,"column":17,"nodeType":"250","messageId":"251","endLine":1,"endColumn":27},{"ruleId":"248","severity":1,"message":"289","line":1,"column":53,"nodeType":"250","messageId":"251","endLine":1,"endColumn":59},{"ruleId":"290","severity":1,"message":"291","line":43,"column":6,"nodeType":"292","endLine":43,"endColumn":8,"suggestions":"293"},{"ruleId":"248","severity":1,"message":"294","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":18},{"ruleId":"248","severity":1,"message":"295","line":2,"column":10,"nodeType":"250","messageId":"251","endLine":2,"endColumn":16},{"ruleId":"248","severity":1,"message":"296","line":3,"column":10,"nodeType":"250","messageId":"251","endLine":3,"endColumn":14},{"ruleId":"248","severity":1,"message":"267","line":3,"column":16,"nodeType":"250","messageId":"251","endLine":3,"endColumn":27},{"ruleId":"248","severity":1,"message":"286","line":3,"column":29,"nodeType":"250","messageId":"251","endLine":3,"endColumn":36},{"ruleId":"281","severity":1,"message":"282","line":67,"column":17,"nodeType":"283","endLine":67,"endColumn":60},"@typescript-eslint/no-unused-vars","'setStaticCache' is defined but never used.","Identifier","unusedVar","no-native-reassign",["297"],"no-negated-in-lhs",["298"],"'Types' is defined but never used.","'WeaponsLookup' is defined but never used.","'List' is defined but never used.","'url' is assigned a value but never used.","'updateCharacter' is assigned a value but never used.","'filterStates' is assigned a value but never used.","'toggle' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'useLocation' is defined but never used.","'useRouteMatch' is defined but never used.","'id' is assigned a value but never used.","'loadedPlayer' is assigned a value but never used.","'setLoadedPlayer' is assigned a value but never used.","'getPlayerData' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Form' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'rarityColor' is defined but never used.","'DOMElement' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'onClick' and 'selected'. Either include them or remove the dependency array. If 'onClick' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["299"],"'BG_THIRD' is defined but never used.","'Header' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},"Update the dependencies array to be: [onClick, selected]",{"range":"302","text":"303"},[1209,1211],"[onClick, selected]"]